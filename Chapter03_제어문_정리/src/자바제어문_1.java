/*
 *   1.변수   =>> 여러개 (배열,클래스)
 *     => 식별자 : 변수명 설정
 *        ** 대소문자 구분 Name != name
 *     => 약속 (문법) -->  면접 => 합격 => 3개월 연수 => 파견업체에 인터뷰
 *     -----------                 
 *         리팩토링
 *      1) 클래스 , 인터페이스명은 대문자로 시작
 *         ex) class Main
 *           => Main main=new Main()
 *              ---------------------웹에서는 한글이 깨진다 => 이름을 알파벳으로 주는 이유
 *           => 두개의 단어를 이용할 경우( 대문자 사용 , _ 사용)
 *         ex) MainClass , File_name
 *      2) 변수 , 메소드 => 소문자 시작
 *      3) 상수 => 모든 알파벳이 대문자
 *      4) 들여쓰기 
 *     => 데이터 한개만 저장하는 메모리 공간
 *     => 데이터형 (정수 , 실수 , 문자 , 논리 중 어떤것을 사용할것인가)
 *     			  |     |     |    |
 *     			  |     |     |   boolean. true/false
 *     			  |     |   char(2byte) => 양수 (65535) 오늘이후 사라지고, String 이 들어옴
 *                |     |                                    String(문자열을 저장하는 데이터형)
 *     	          |   double(8byte)=> 소수점 15자리             **웹에서 가장 많이 사용
 *     			int(4byte) / long(8byte) / byte(1byte)      ** 브라우저 => 자바로 값 전송
 *   -----------											------------------------
 *    												무조건 문자열
 *   2.연산자  =>> 요청처리 => 변수를 가공한다
 *       단항연산자
 *          => 증감연산자 (++ , --)
 *          => 형변환 연산자 (type)
 *          => 부정 연산자(!)
 *       이항연산자
 *          => 산술연산자 (+,-,*,/,%)
 *          => 비교연산자 (==,!=,<,>,<=,>=)
 *          => 논리연산자 ( && , || )
 *          => 대입연산자 ( =, +=, -= ) 
 *       삼항연산자
 *          =>   (조건)?값1:값2  => if~else  => 웹,게임(소스를 줄일경우)
 *   3.제어문  =>> 프로그램 자체 제어
 *          => 필요한 내용만 출력 (건너뛰는형태) => 조건문(조건에 맞는것만 출력한다)
 *          => 소스가 반복적일경우 => 반복문
 *          => 반복문에 제어 => 반복문 종료 , 반복문에서 제외
 *          1) 조건문
 *            = 단일 조건문 
 *             => 조건이 맞는 경우에만 출력
 *              if(조건문) => true/false => 부정연산자,비교연산자,논리연산자 
 *              { 
 *              	true -> 문장을 수행
 *              } =>false면 건너뛴다
 *              ** 여러개 사용시에는 독립으로 사용이 된다 => 모든 조건을 검색
 *            = 선택 조건문 
 *              => true / false 경우 나눠서 처리 => 웹, 윈도우에서 가장 많이 사용
 *              ex) 
 *                 로그인
 *                  =로그인이 된 경우   => main
 *                  =로그인이 안된 경우  => 로그인 다시요청 -or-> 회원가입 페이지
 *                if(isLogin())
 *                {
 *                	main.jsp 이동   ->true일 경우 처리
 *                }
 *                else
 *                {
 *                	login.jsp 이동  ->false일 경우 처리
 *                }
 *            = 다중 조건문 => 해당 조건에 맞는 문장만 1개 수행
 *               if(조건)
 *               {
 *               	조건 true => 수행 => 종료
 *               }   |  false
 *               else if(조건)
 *               {
 *               	조건 true => 수행 => 종료
 *               }   |  false
 *               else if(조건)
 *               {
 *               	조건 true => 수행 => 종료
 *               }   |  false
 *               else 
 *               {
 *               	조건이 없는 경우 처리되는 문장 => 필요가 없는 경우에는 생략이 가능
 *               }
 *           다중 조건문을 간결하게 만든 제어문
 *           선택문 => switch~case
 *                   게임 => key 입력값
 *                   웹 => 범위지정 (예약,체크 .. 금액..) => 다중 조건문
 *            switch(문자,정수,문자열)
 *                char , int , long , String
 *                {
 *                 	case 1: 값이 1일 경우
 *                   처리문장
 *                   break;
 *                  case 2: 값이 2일 경우
 *                   처리문장
 *                   break;
 *                   default: 다른 키 설정..
 *                 }
 *                 => 메뉴 =>  1개 선택 > 윈도우창 => 네트워크
 *                 => 조건문
 *            2) 반복문 : for / while / do~ while
 *                    *------------*
 *              for 반복 횟수 존재 => 화면 UI => 15개 ~ 20개
 *                  =>페이징 기법(인라인뷰)
 *                  =>가장 많이 사용되는 반복문
 *                  형식)
 *                        시작위치 종료위치 증가=>종료위치가 될수있게
 *                      for(초기값;조건식;증감식)
 *                      {
 *                      	실행문장
 *                      }      
 *                      for(int i=1;i<=3;i++)
 *                      {
 *                      	문장
 *                      }
 *                      1-> 2,3,4 -> 2,3,4 -> 2,3,4... 2번 false면 종료
 *                      i=1 if(i<=3) 문장수행 => i++
 *                      i=2 if(i<=3) 문장수행 => i++
 *                      i=3 if(i<=3) 문장수행 => i++
 *                      i=4 if(i<=3)
 *                          ---------false => 문장수행X
 *               while : 무한 반복 (반복회수를 모르는 경우)
 *                    => 서버 프로그램(Back-End_
 *                    => 파일읽기 / 데이터베이스 / 빅데이터
 *                   형식) 
 *                       초기값 ----------1
 *                              | false => 종료     
 *                       while(조건식)---------
 *                       {					|
 *                       	반복 실행문장		|
 *                       	증가식			|
 *                       }   ----------------
 *                   단점== 한번도 수행을 못할 수도 있다 => 보완 do~ while
 *                    
 *                do~while : 조건이 나중에 검색 => 반드시 한번 이상을 수행한다
 *                         =>사용 빈도는 거의 없다
 *                    형식)
 *                        초기값 -----------------1
 *                        do
 *                        {
 *                        	반복 수행문장
 *                        	증가식
 *                        }while(조건식)
 *                        					
 *            3) 반복제어문 : break,continue	
 *                        *----*			
 *                        제어문을 종료할때 사용 :  반복문, 선택문 
 *                   continue => 반복문에서만 사용 => 제외
 *                   
 *                  for(int i=1;i<=5;i++)
 *                  {
 *                  	if(i==3) continue; => 3일때 증가식으로 올라간다
 *                  }    3번을 제외
 *              출력값 : 1,2,4,5
 *             *** for,while => break를 사용하면 종료
 *             *** for => countinue => 증가식으로 이동
 *                                     ----
 *                 for(초기값;조건식;증감식)
 *                                ----
 *             *** while => continue => 조건식으로 이동
 *                 while(조건문)
 *                 		 ---- 주의점 (countinue를 잘못 사용하면 무한루프)
 *                 int i=1;
 *                 while(i<=5)
 *                 {
 *                 	   if(i==3) countinue
 *                     System.out.println(i)
 *                     i++
 *                 }
 *                 
 *                 i=1  -> i<=5  -> 1 -> i++
 *                 i=2  -> i<=5  -> 2 -> i++
 *                 i=3  -> continue  -> i<=5
 *                 
 *                                   
 *   -----------한개의 기능설정=> 메서드
 *   ---------------------------------- +통합 (클래스)
 *   클래스 : 데이터형 / 통합
 *   				=> 웹 출력 (브라우저 : HTML)
 *   
 * 
 */
public class 자바제어문_1 {

	public static void main(String[] args) {
		
		System.out.println("===== for - break 반복문 중단 =====");
		for(int i=1;i<=5;i++)
		{
			if(i==3) break;
			System.out.println("i="+i);
		}
		
		System.out.println("===== while - break 반복문 중단 =====");
		int i=1;
		while(i<=5)
		{
			if(i==3) break;
			System.out.println("i="+i);
			i++;
		}
		System.out.println("===== do~while 반복문 중단=====");
		i=1;
		do {
			if(i==3) break;
			System.out.println("i="+i);
			i++;
		}while (i<=5);
		
		
		
	}
}
