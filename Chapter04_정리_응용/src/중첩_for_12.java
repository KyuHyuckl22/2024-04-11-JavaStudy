/*
 *     정렬
 *     ---  버블 정렬 ( 인접한 수 끼리 비교) ==> 뒤에부터 고정
 *     27 22 17 23 9 2 ==> 2 9 17 22 23 27  ASC(올림차순)
 *     27 22 17 23 9 2 
 *     -- -- 가까운 두개만 비교
 *     22 27
 *        -- -- 가까운 두개 비교
 *        17 27
 *           -- -- 
 *           23 27
 *              -- --
 *              9  27
 *                 -- --
 *                  2 27               =======================> 1바퀴때 5번
 *    -------------------------------- 1round ==(for문 1바퀴)
 *    22 17 23 9 2 (27)  맨 뒤 가장 높은수 고정.
 *    -- --
 *    17 22
 *       -- --
 *       22 23
 *          -- --
 *          23 9
 *             -- --
 *             9  23
 *                -- --
 *                2  23                =======================> 2바퀴때 4번
 *   --------------------------------- 2round ==(for 2)
 *   17 22 9 2 (23) (27)
 *   -- --
 *   17 22
 *      -- -
 *       9 22
 *         -- - 
 *         2  22                       =======================> 3바퀴때 3번
 *   --------------------------------- 3round ==(for 3)
 *   17  9  2  (22) (23) (27)
 *   -- --
 *   9  17
 *     -- --
 *      2  17                          =======================> 4바퀴때 2번
 *   --------------------------------- 4round == (for 4)
 *   9  2  (17) (22) (23) (27)
 *   -- --
 *   2  9                              =======================> 5바퀴때 1번
 *   --------------------------------- 5 round ==(for 5)
 *   2 9 17 22 23 27    5바퀴만 돌아감. 6개를 돌리면 5 바퀴만 돌아도 되기때문에 length -1 이 되는것
 *    ---------------------------버블정렬
 *    
 *    i  j
 *    
 *    1  5    ===> 6
 *    2  4    ===> 6
 *    3  3    ===> 6
 *    4  2    ===> 6
 *    5  1    ===> 6
 *    
 *    i+j=6  j==6-i
 *     
 */
import java.util.*;

public class 중첩_for_12 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr= {27, 22, 17, 23, 9, 2};
		System.out.println("정렬 전:");
		System.out.println(Arrays.toString(arr));
		System.out.println("정렬 후:");
		
		for(int i=0; i<arr.length-1; i++) {  // i 는 바퀴수
			for(int j=0; j<arr.length-1-i; j++) {
//				 0>1   1>2  ... 똑같으면 비교할 수 없기때문에 0번째와 1번째가 되게끔 1씩을 더해줘야함
				if(arr[j]>arr[j+1]) {
					int temp=arr[j];
					arr[j]=arr[j+1];
					arr[j+1]=temp;
				}
				
			}
			System.out.println((i+1)+"Round:"+Arrays.toString(arr));
		}
		System.out.println(Arrays.toString(arr));
		
		// DESC
		
	}

}
