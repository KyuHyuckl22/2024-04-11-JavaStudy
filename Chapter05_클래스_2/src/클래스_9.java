/*
 *  122p
 *  
 *   객체 생성
 *   -------
 *    형식)
 *        new 생성자()
 *           ------- 클래스명과 동일
 *    Ex)
 *        class A
 *        {
 *        }
 *        
 *        A a=new A();
 *            - 객체 => 멤버변수 / 멤버메소드를 관리
 *            
 *        배열
 *           int [] arr=new int[2];
 *           
 *        클래스
 *           class A
 *           {
 *               String name;
 *               int age;
 *           }
 *           
 *           A a=new A();
 *           ----- a -----
 *               0x200 ==> 0x200 에 있는 name 이라는 변수 값을 읽어 온다 => a.name
 *           -------------  =>  0x200  ----------
 *                                     ---name---  a.name
 *                                        null
 *                                        
 *                                       ------
 *                                     ----age---- a.age
 *                                       ---0---
 *                                      ----------
 *       123p   
 *          A a=new A();
 *              --- -----> 생성자 => 멤버변수의 초기값을 대입해주는 역할 => new 랑 같이 다닌다
 *               | 
 *               |  클래스에 있는 멤버변수를 저장할 수 있는 공간을 만들어 준다                
 *                  ***생성자 호출시에는 반드시 new 생성자()
 *                                      ----------- 
 *               | 저장되어 있는 변수나 메소드를 관리 => 객체 => 설계(클래스)
 *               
 *               
 *               1. 설계 => class
 *               2. 메모리 저장 => new
 *               3. 활용 => new로부터 받은 메모리를 이용해서 활용 => 객체 
 *               ---------------------------------------------이렇게 만든 프로그램을 객체지향 프로그램이라고 함
 *               주 목적: 재사용, 수정, 추가 편리하게 만든다
 *                                     
 *             => 객체 사용
 *               1. 생성 
 *                  A a= new A();
 *                  -------------
 *                  A a;
 *                  a= new A();
 *                  -------------
 *               2. 사용시
 *                  a. 변수
 *                  a. 메소드
 *                  -------------    . 은 메모리 주소 접근 연산자
 *                                   ---------------------
 *                                   
 *               => 참조변수 (객체) 메모리 주소를 이용하는 방식
 *               => 일반변수 => 메모리에 저장된 값을 이용하는 방식
 *               int a= 10;
 *               int b= a;                      
 *               
 *           class A
 *           {    
 *               String name;
 *               int age;
 *           }
 *           A a=new A();
 *           
 *            주소 => 스택          실제 데이터값 저장 (힙)
 *            ---a---
 *            
 *            -------     =>     0x100--------------
 *                                      ----name----
 *                                          null
 *                                      ------------
 *                                      
 *                                      -----age----
 *                                            0
 *                                      ------------
 *                                    ---------------
 *             ** 메모리 주소가 같은 경우에는 같은 메모리를 제어한다 
 *               메모리 주소를 받는 경우 => 메모리에 있는 변수 자체를 제어할 수 있다 => 
 *                            동시에 같은 메모리변수 사용이 가능하다
// *               배열 / 클래스는 메모리 주소를 이용한다. 참조변수이다
 *               
 */
public class 클래스_9 {

	public static void main(String[] args) {
		
	}

}
