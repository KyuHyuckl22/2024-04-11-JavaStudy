package com.sist.main;
/*
 *  상속
 *    1) 단일 상속만 가능
 *    2) extends : 확장한 클래스 
 *    3) 이미 제작된 클래스를 이용 => 신뢰성이 좋다
 *    4) 소스를 줄일 수 있다 => 가독성은 떨어진다 (뭐가 들어있는지 우리가 알지 못하고 들어가기 때문)
 *      => 가상으로 상속되었다고 가정..
 *      
 *    class A
 *    {
 *      int a;
 *      int b;
 *      int c;
 *      public void display(){}
 *      
 *    }
 *    ---------------------------
 *    class B extends A
 *    {      
 *       a,b,c, display()              // 아무것도 없는것 처럼 보이지만 class a 의 내용이 들어있다
 *    }
 *    
 *    --- bb ---
 *    
 *    ----------    0 x 100    --------------------------------
 *                                   ----super----
 *                                    ---- a ----
 *                                    ---- a ----
 *                                    ---- a ----
 *                                    --display--
 *                                    
 *                                  ---------------   
 *                                   ---- this----   
 *                                     ----bb----
 *                             --------------------------------
 *                             
 *                                 bb라는 객체를 통해서 접근이 가능 
 *                                 => 상속이 안되는것
 *                                   1. 생성자
 *                                   2. 초기화 블록
 *                                   3. private : 상속은 가능(단지 접근이 불가능)
 *                                   4. static : 상속은 안된다 => 공통으로 사용이 가능하게 만든다
 *                            class Super
 *                            class Sub extends Super
 *          
 *                               Super
 *                                 ↑ (상속 기호)
 *                                Sub
 *                            ----------- 클래스의 크기 비교는 반드시 상속 / 포함
 * 
 *                            class A {
 *                               int a, b, c, d, e;
 *                            }
 *                            class B {
 *                               int k;
 *                            }
 *                            ---------- A > B (X) ==> 크기를 비교할 수 없다. (데이터나 변수가 많다고 클래스의 크기가 더 큰 것이 아니다.
 *                                               ---- 상속 / 포함으로만 크기 비교가 가능하다.
 *                            class A {
 *                               int a;
 *                               int b;
 *                            }
 *                            class B extends A {
 *                               (int a, int b)
 *                               int c;
 *                            }
 *                            ---------- A > B ===> class B가 변수는 3개로 더 많지만 상속을 내리는 A 클래스의 크기가 더 크다 (is - a)
 * 
 *                            동물
 *                             |
 *                      -----------------
 *                      |       |      |
 *                     포유류    양서류 
 *                       조류
 *                      |
 *                -----------------
 *                |      |      |
 *                인간     말      소
 *                |
 *             ---------
 *             |      |
 *            남자      여자   
 * 
 *                      ==> '이다.'라는 과정을 거쳐야 상속이라 할 수 있음 ==> 남자는 인간'이다'. ==> 인간은 포유류 '이다.' ===> 포유류는 동물 '이다.'
 *                         ==> 상속을 내리는 클래스가 크다.
 *                      ==> 남자와 여자, 인간과 말과 소는 크기를 비교할 수 없다. ==> 상속을 받지 않았기 때문에.
 *          인간 = 남자
 *          인간 = 여자
 * 
 *          남자 = (남자)인간
 *          여자 = (여자)인간
 *          ---------------- 클래스에도 크기가 있다. (형변환)
   
 *        **자바는 모든 클래스( 사용자 정의, 라이브러리) 의 상속을 내리는 클래스가 있다 (최상위 클래스 : Object)
 *          => Object 가 가지고 있는 모든 기능을 사용할 수 있다
 *          => Object 는 모든 데이터형의 상위 클래스
 *             ------ 기본형 / 모든 클래스를 받을 수 있다 / 배열
 *            Ex)
 *              Object o=10;
 *              o=10.5
 *              o="aaa"
 *              o='A'
 *              o=new A()
 *              ------------> 배열 => 데이터형 여러개 첨부 가능
 *              Object[] obj ={"", 10.7, 10, 'A', new A()};
 *            
 */
import javax.swing.*;
public class MainClass_3 extends Object{  // extends 사용으로 JFrame 이 갖고 있는 모든 내용을 MainClass_3 이 사용 가능해졌다. 
	/*
	 *   생략이 가능한 코드
	 *   -------------
	 *   1. import java.lang.*;  => String, Math, StringBuffer ... 자주 사용하기 때문에 생략이 가능
	 *   2. extends Object => 생략이 되어있는 상태. 모든 클래스는 Object 로부터 상속을 받는다
	 *   3. 생성자 => 필요없는경우 생략이 가능 => 컴파일러가 자동으로 추가
	 *   4. void 메소드에서 return 을 생략할 수 있다 => 컴파일러가 자동으로 추가
	 *   5. 모든 클래스는 예외처리가 있어야 한다
	 *      --------------------------
	 *      컴파일시                실행시
	 *      -----                ----
	 *      반드시 예외 처리          예외처리 생략이 가능 --> 사용자 입력값을 받아봐야 알 수 있다
	 *      
	 *   => 상속 
	 */
	public MainClass_3() {
    	
    }
	public static void main(String[] args) {

	}

}
