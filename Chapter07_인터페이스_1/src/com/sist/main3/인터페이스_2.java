package com.sist.main3;
/*
 *   1. 클래스 구성요소 
 *     변수 : 기본형, 클래스, 배열
 *     메소드 => 연산자 / 제어문
 *     -----------------------
 *   2. 클래스 연결 => 인터페이스
 *                 관련된 클래스가 나왔을때 인터페이스 사용
 *   3. 프로그램 종료 방지 => 예외처리
 *                   사용자가 입력값을 잘못 넘겨준 경우 처리
 *   -------------------------웹
 *   => 못만드는 클래스가 존재
 *      ----------------
 *      -오라클 연결 / 브라우저 연결 / 파일 연결  
 *      =을 만들수 없기때문에 => 라이브러리를 사용
 *      -> 우리들은 지금 레고 블록 하나를 만드는 것과 같다 => 레고블록 : 클래스
 *      =class 는 1개의 기능만 수행
 *              -------------- 게시판 (메소드 기능 => 여러개기능) => 컴포넌트
 *                                                          -------여러개 관리 => 컨테이너
 * ------------------------------------------------------------------------------------------
 *   => 7장 
 *     클래스의 종류
 *       1) 일반 클래스
 *         => 일반 기능이 있는 클래스
 *         => 조립 => main()
 *         => 변수 설정
 *            ------- 어떻게 (활용)할지, (초기화)는 뭘줄건지
 *                          ↓          ↓
 *                         메소드       생성자 => 초기화가 필요 없는 경우에는 생략 
 *            => 변수 / 메소드
 *               ---------- 상속이 있는 경우
 *          [접근지정어][제어어]class ClassName
 *          -------- -----
 *                    static : 공통기간, abstract : 추상클래스, final : 절판 => 확장이 안되는 클래스
 *                                    ---------*
 *           public : 다른 클래스에서 사용
 *          {
 *              ---------------------------
 *               변수 => 데이터 => 모든 프로그램은 데이터 관리
 *                                         --------- 자바 스크립트 (Vue, React)
 *               => 여러개 저장 => 인스턴스 변수 => new 를 이용해서 따로저장
 *               => 한개 저장 => 정적변수 (static)
 *              ---------------------------
 *               생성자 => 없는경우에는 컴파일러가 자동 추가
 *              ---------------------------
 *               메소드 => 리턴형 / 매개변수 
 *                        ↓    ↓------
 *                        ↓    사용자 요청값 => 여러개 사용이 가능하다
 *                       요청 처리 결과값 => 한개만 가능하다 (여러개일 경우 배열, 클래스를 사용한다)      
 *              ---------------------------
 *              
 *          }
 *       2) 추상 클래스                               좋은점
 *         => 재사용 => 설계 => 공통으로 사용되는 내용을 설계 ======> 개발 기간이 단축된다
 *         6개월 을 개발한다고 했을때
 *           설계 (요구사항 분석) => 3개월
 *           데이터 베이스 설계 => 1개월
 *           화면 UI => 1개월
 *           -----------------
 *           개발 구현 => 15일  |
 *           ----------------- 재사용 (상속=변경할 내용이 있다, 포함=변경할 내용이 없다)
 *           
 *           테스트 => 15일 
 *           배포 => 1개월
 *       3) 인터페이스
 *       4) 내부 클래스 => 네트워크나 게임
 *                     -------
 *                     => 접속을 받는 클래스 / 클라이언트 통신
 *                        ------------    ----------
 *                             |______________|___> IP, PORT => 클래스와 클래스간의 공통으로 사용되는 변수, 메소드가 있는경우
 */
public class 인터페이스_2 {

	public static void main(String[] args) {

	}

}
